---
import Layout from "../layouts/Layout.astro";
import { fade } from "astro:transitions";
import JSZip from "jszip";
import { getFiles } from "../utils/getFiles";
import { getFiles2 } from "../utils/getFiles2";
const directory = "./public/mods";
const files = getFiles(directory);
const directory2 = "./public/mods/lastUpdate";
const files2 = getFiles2(directory2);
const title = "Toadland";
const subtitle = "Моды";
const description =
  "Приватный minecraft сервер 1.20.1 с модами и дружелюбной атмосферой! | Сборка модов";
const pageIcon = "/icons/files.svg";
---

<Layout
  transition:animate={fade({ duration: "0.5s" })}
  title={title}
  {subtitle}
  icon={pageIcon}
  description={description}
>
  <div class="mods-wrapper">
    <div class="mods-container">
      <h1 class="mods-title">Необходимый минимум для игры на сервере.</h1>
      <span class="mods-note-text"
        >Minecraft 1.20.1 / forge 47.3.11 <br /> Не рекомендуем самостоятельно обновлять
        моды, так как могут возникнуть конфликты, из-за которых у вас не выйдет зайти
        на сервер. <br /></span
      >
      <button id="download-last-update" class="last-update-download-button">
        Скачать последние обновленные моды
        <span class="loader"></span>
      </button>
      <div class="last-update-header-block">
        <h3 class="dropdown-header">
          Update list
          <img
            class="dropdown-icon"
            src="/icons/arrow_down.svg"
            alt="Arrow Icon"
          />
        </h3>
        <div class="dropdown-list">
          {
            files2.map((file2) => (
              <a class="dropdown-link" href={file2.path} download>
                {file2.name}
              </a>
            ))
          }
        </div>
      </div>
      <button id="download-all" class="mods-download-all-button">
        Скачать все моды
        <span class="loader"></span>
      </button>

      <span class="mods-list">
        {
          files.map((file) => (
            <a class="mods-download-link" href={file.path} download>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="mod-download-icon"
                viewBox="0 -960 960 960"
              >
                <path d="M480-337q-8 0-15-2.5t-13-8.5L308-492q-12-12-11.5-28t11.5-28q12-12 28.5-12.5T365-549l75 75v-286q0-17 11.5-28.5T480-800q17 0 28.5 11.5T520-760v286l75-75q12-12 28.5-11.5T652-548q11 12 11.5 28T652-492L508-348q-6 6-13 8.5t-15 2.5ZM240-160q-33 0-56.5-23.5T160-240v-80q0-17 11.5-28.5T200-360q17 0 28.5 11.5T240-320v80h480v-80q0-17 11.5-28.5T760-360q17 0 28.5 11.5T800-320v80q0 33-23.5 56.5T720-160H240Z" />
              </svg>
              {file.name}
            </a>
          ))
        }
      </span>
    </div>
  </div>
</Layout>
<style>
  .mods-wrapper {
    max-width: 1440px;
    margin: 0 auto;
    padding: 20px;
    box-sizing: border-box;
    @media (max-width: 398px) {
      padding: 5px;
      max-width: 298px;
    }
  }
  .last-update-download-button {
    font-family: gilroy-bold;
    transition: 0.2s;
    border: none;
    width: 100%;
    padding: 15px;
    font-size: 24px;
    background-color: var(--color-green-400);
    color: white;
    border-radius: 14px;
    cursor: pointer;
    margin-bottom: 10px;
    text-align: center;
    @media (max-width: 598px) {
      padding: 30px;
      font-size: 2rem;
    }
    @media (max-width: 448px) {
      padding: 20px;
      font-size: 1rem;
    }
  }
  .mods-container {
    max-width: 100%;
    margin: 0 auto;
    padding: 20px;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    justify-content: center;
    overflow: hidden;
    @media (max-width: 398px) {
      padding: 0px;
    }
  }

  .mods-list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    width: 100%;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    overflow: hidden;
    @media (max-width: 448px) {
      gap: 10px;
    }
    @media (max-width: 398px) {
      grid-template-columns: inherit;
    }
  }

  .mods-download-link {
    font-family: gilroy-bold;
    display: flex;
    align-items: center;
    padding: 1rem;
    background-color: var(--color-green-300);
    color: white;
    text-align: left;
    text-decoration: none;
    border-radius: 15px;
    text-transform: uppercase;
    width: 100%;
    box-sizing: border-box;
    word-break: break-word;
    @media (max-width: 1168px) {
      font-size: 18px;
    }
    @media (max-width: 448px) {
      font-size: 14px;
      height: 40px;
    }
    @media (max-width: 398px) {
      border-radius: 10px;
    }
    @media (max-width: 368px) {
      padding: 5px;
      border-radius: 6px;
      height: 35px;
      font-size: 10px;
    }
  }

  .mods-title {
    font-family: gilroy-bold;
    color: var(--color-title);
    font-size: 48px;
    text-align: center;
    margin-bottom: 20px;
    word-break: break-word;
    @media (max-width: 398px) {
      font-size: 24px;
    }
    @media (max-width: 288px) {
      font-size: 18px;
    }
  }
  .mods-note-text {
    margin: 0;
    padding: 0;
    color: var(--color-note-text);
    margin-bottom: 20px;
    font-size: 1rem;
    @media (max-width: 398px) {
      font-size: 20px;
    }
    @media (max-width: 348px) {
      font-size: 14px;
    }
  }
  .mods-list-item {
    margin: 0 auto;
    justify-content: center;
    flex-wrap: wrap;
    display: flex;
    flex-flow: column;
  }

  .mods-download-link:hover {
    background-color: var(--color-green-400);
    transition: 0.2s;
  }

  .mods-download-link:hover svg {
    background-color: var(--color-green-500);
    transition: 0.2s;
  }
  .mod-download-icon {
    margin-right: 6px;
    background-color: var(--color-green-400);
    padding: 0.5rem;
    border-radius: 10px;
    width: 24px;
    height: 24px;
    fill: var(--color-green-100);
    @media (max-width: 448px) {
      width: 12px;
      height: 12px;
      padding: 0.4rem;
      border-radius: 5px;
    }
  }

  .mods-download-all-button {
    font-family: gilroy-bold;
    transition: 0.2s;
    border: none;
    width: 100%;
    padding: 30px;
    font-size: 48px;
    background-color: var(--color-accent);
    color: white;
    border-radius: 14px;
    cursor: pointer;
    margin-bottom: 20px;
    text-align: center;
    @media (max-width: 598px) {
      padding: 30px;
      font-size: 2rem;
    }
    @media (max-width: 448px) {
      padding: 20px;
      font-size: 1rem;
    }
  }

  .mods-download-all-button:hover {
    background-color: var(--color-accent-hover);
  }
  .mods-download-all-button .loader {
    align-self: center;
    display: none;
    margin-left: 10px;
    border: 3px solid rgba(80, 80, 80, 0.3);
    border-top: 3px solid white;
    border-radius: 50%;
    width: 24px;
    height: 24px;
    z-index: 228;
    animation: spin 1s linear infinite;
  }

  .mods-download-all-button.loading {
    background-color: var(--color-accent);
    cursor: wait;
  }

  .mods-download-all-button.loading .loader {
    display: inline-block;
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  .details-container {
  }
  .mods-details {
    flex-direction: row;
    display: flex;
    justify-content: center;
    align-content: center;
    align-items: center;
    flex-wrap: wrap;
  }

  .mods-summary {
    font-family: gilroy-bold;
    font-size: 28px;
    display: flexbox;
    padding-top: 1rem;
    padding-bottom: 1rem;
    text-align: center;
    width: 100%;
    cursor: pointer;
    background-color: var(--color-green-300);
    color: white;
    text-transform: uppercase;
    text-align: center;
    border-radius: 14px;
    margin-bottom: 20px;
    list-style-image: url(/public/icons/arrow_down.svg);
    @media (max-width: 1168px) {
      font-size: 14px;
    }
    @media (max-width: 448px) {
      font-size: 10px;
      text-align: center;
    }
  }
  .mods-summary:before {
    content: "Показать ";
  }
  .mods-summary::marker {
    margin: 0;
    padding: 0;
  }
  details[open] .mods-summary {
    width: auto;
    text-align: center;

    background-color: var(--color-green-400);
    list-style-image: url(/public/icons/arrow_up.svg);
  }
  details[open] .mods-summary:before {
    content: "Скрыть ";
  }
  .dropdown-header {
    cursor: pointer;
    display: flex;
    align-items: center;
    font-family: gilroy-medium;
    color: #fefffd;
    background-color: var(--color-green-300);
    padding: 10px;
    text-align: center;
    border-radius: 10px 10px 0px 0px;
    justify-content: center;
    margin: 0;
  }

  .last-update-header-block {
    text-align: center;
  }
  .dropdown-header .dropdown-icon {
    width: 24px;
    height: 24px;
    margin-left: 10px;
    transition: transform 0.3s ease;
  }

  .dropdown-list {
    display: grid;
    grid-template-rows: auto;
    grid-template-columns: 1fr 1fr;
    grid-gap: 5px;
    overflow: hidden;
    max-height: 0;
    transition: max-height 0.3s ease;
    margin: 0;
    padding: 0px;
    margin-bottom: 20px;
    background-color: var(--color-white);
    border-radius: 0px 0px 10px 10px;
  }

  .dropdown-link {
    display: block;
    padding: 10px;
    text-decoration: none;
    color: var(--color-title);
    transition: 0.3s all;
    font-family: gilroy-bold;
    text-transform: uppercase;
  }

  .dropdown-link:hover {
    background-color: var(--color-green-200);
  }
  .last-update-download-button .loader {
    align-self: center;
    display: none;
    margin-left: 10px;
    border: 3px solid rgba(80, 80, 80, 0.3);
    border-top: 3px solid white;
    border-radius: 50%;
    width: 24px;
    height: 24px;
    z-index: 228;
    animation: spin 1s linear infinite;
  }
  .last-update-download-button.loading .loader {
    display: inline-block;
  }
  .last-update-download-button {
    display: flex;
    align-items: center;
    justify-content: center;
  }
</style>
<script>
  function setupDropdown() {
    const headers = document.querySelectorAll(".dropdown-header");
    const openItems = []; // Для управления открытыми элементами

    function toggleDropdown(event) {
      const header = event.currentTarget;
      const list = header.nextElementSibling;
      const icon = header.querySelector(".dropdown-icon");
      const isOpen = list.style.maxHeight;

      if (isOpen) {
        // Закрыть текущий список
        list.style.maxHeight = null;
        icon.style.transform = "rotate(0deg)"; // Возвращаем стрелку вниз
        openItems.splice(openItems.indexOf(list), 1);
      } else {
        // Закрыть предыдущие, если открыто больше одного
        if (openItems.length >= 1) {
          const oldestOpenItem = openItems.shift();
          oldestOpenItem.style.maxHeight = null;
        }

        // Открыть текущий список
        list.style.maxHeight = list.scrollHeight + "px";
        icon.style.transform = "rotate(180deg)"; // Переворачиваем стрелку вверх
        openItems.push(list);
      }
    }

    headers.forEach((header) => {
      header.removeEventListener("click", toggleDropdown); // На случай повторной инициализации
      header.addEventListener("click", toggleDropdown);
    });
  }

  document.addEventListener("DOMContentLoaded", setupDropdown);
</script>
<script>
  import JSZip from "jszip";

  async function downloadAllMods() {
    const button = document.getElementById("download-all");
    const loader = button.querySelector(".loader");

    // Устанавливаем состояние загрузки
    button.classList.add("loading");

    const zip = new JSZip();
    const files = [...document.querySelectorAll(".mods-download-link")];

    for (const file of files) {
      const anchor = file;

      if (anchor instanceof HTMLAnchorElement) {
        const response = await fetch(anchor.href);
        const blob = await response.blob();
        zip.file(anchor.innerText.trim(), blob);
      }
    }

    const content = await zip.generateAsync({ type: "blob" });

    const link = document.createElement("a");
    link.href = URL.createObjectURL(content);
    link.download = "mods.zip";
    link.click();

    // Убираем состояние загрузки после завершения
    button.classList.remove("loading");
  }

  async function downloadLastUpdate() {
    const button = document.getElementById("download-last-update");
    const loader = button.querySelector(".loader");

    // Устанавливаем состояние загрузки
    button.classList.add("loading");

    const zip = new JSZip();
    const files2 = [...document.querySelectorAll(".dropdown-link")];

    for (const file of files2) {
      const anchor = file;

      if (anchor instanceof HTMLAnchorElement) {
        const response = await fetch(anchor.href);
        const blob = await response.blob();
        zip.file(anchor.innerText.trim(), blob);
      }
    }

    const content = await zip.generateAsync({ type: "blob" });

    const link = document.createElement("a");
    link.href = URL.createObjectURL(content);
    link.download = "lastUpdate.zip";
    link.click();

    // Убираем состояние загрузки после завершения
    button.classList.remove("loading");
  }

  document
    .getElementById("download-last-update")
    .addEventListener("click", downloadLastUpdate);
  document
    .getElementById("download-all")
    .addEventListener("click", downloadAllMods);
</script>
