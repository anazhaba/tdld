---
import { parseStringPromise } from "xml2js";

const rssFeedUrl = "https://rsshub.app/telegram/channel/toadland";
let feed = [];

const response = await fetch(rssFeedUrl, { cache: "no-store" });
const text = await response.text();
const parsedFeed = await parseStringPromise(text);

feed = parsedFeed.rss.channel[0].item.map((item) => ({
  title: item.title[0],
  description: item.description[0].replace(/<\/?[^>]+(>|$)/g, ""), // Удаление HTML-тегов
  images:
    item.description[0]
      .match(/<img[^>]+src="([^">]+)"/g)
      ?.map((img) => img.match(/src="([^">]+)"/)[1]) || [],
  link: item.link[0],
  pubDate: new Date(item.pubDate[0]).toLocaleDateString(),
}));
---

<style>
  .rss-feed {
    text-align: left;
    max-width: 1440px;
    margin: 0 auto;
    font-family: gilroy-medium;
    padding: 20px;
    border-radius: 12px;
  }
  .rss-item {
    margin-bottom: 10px;
    padding-bottom: 10px;
  }
  .rss-item h3 {
    border-radius: 14px 14px 0 0;
    background-color: var(--color-green-400);
    margin: 0;
    padding: 10px;
    font-family: gilroy-bold;
    font-size: 1.5em;
    color: var(--color-white);
    cursor: pointer;
    transition: color 0.3s ease;
  }
  .rss-item h3:hover {
    color: var(--color-green-100);
  }
  .rss-item-content {
    overflow: hidden;
    transition: max-height 0.3s ease;
    border-radius: 0 0 14px 14px;
    padding: 10px;
    background-color: var(--color-white);
    display: block;
    box-shadow: 0px 12px 14px 0px rgba(0, 0, 0, 0.09);
  }
  .rss-item-content.show {
    display: none;
  }
  .rss-item p {
    color: var(--color-black);
    font-family: gilroy-medium;
    font-size: 1.2em;
    margin: 10px 0;
  }
  .rss-item a {
    text-decoration: none;
    color: #2980b9;
  }
  .rss-item a:hover {
    text-decoration: underline;
  }
  .img-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    gap: 10px;
    margin: 0;
    margin-left: 10px;
    margin-right: 10px;
    padding-top: 10px;
  }

  .img-grid img {
    border-radius: 10px;
    width: 100%;
    height: auto;
    cursor: pointer;
    transition: transform 0.2s ease;
  }
  .img-grid img::selection {
    background: inherit;
  }
  .img-grid img:hover {
    transform: scale(1.02);
  }

  .modal {
    display: none;
    opacity: 0;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    backdrop-filter: blur(10px);
    justify-content: center;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.127);
    transition: opacity 0.3s ease;
  }

  .modal.open {
    opacity: 1;
    transition: opacity 0.3s ease;
  }

  .modal.hide {
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  .modal img {
    max-width: 90%;
    max-height: 90%;
    box-shadow: 0px 0px 46px 17px rgba(0, 0, 0, 0.2);
  }
  .modal img::selection {
    background: inherit;
  }

  @media (max-width: 600px) {
    .rss-feed {
      padding: 15px;
    }
    .rss-item h3 {
      font-size: 18px;
    }
  }
  @media (max-width: 768px) {
    .img-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 480px) {
    .img-grid {
      grid-template-columns: repeat(1, 1fr);
    }
  }
  /* Анимации */
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes fadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }
</style>

<div class="rss-feed">
  {
    feed.map((item, idx) => (
      <div class="rss-item">
        <h3>{item.title}</h3>
        <div class="rss-item-content" id={`content-${idx}`}>
          <p>
            {item.description}
            <div class="img-grid">
              {item.images.map((img, index) => (
                <img src={img} alt="RSS image" />
              ))}
            </div>
          </p>
          <p>
            <a href={item.link} target="_blank" rel="noopener">
              Смотреть в телеграм
            </a>
          </p>
          <p>Опубликовано: {item.pubDate}</p>
        </div>
      </div>
    ))
  }
</div>

<div id="imageModal" class="modal">
  <img id="modalImage" src="" alt="Preview" />
</div>
<script>
  function setupToggle() {
    const items = document.querySelectorAll(".rss-item h3");
    items.forEach((item, index) => {
      const content = document.getElementById(`content-${index}`);
      content.style.maxHeight = `${content.scrollHeight}px`; // Открыть контент изначально
      content.style.overflow = "hidden"; // Для анимации скрытия

      item.addEventListener("click", () => {
        if (content.style.maxHeight && content.style.maxHeight !== "0px") {
          content.style.maxHeight = "0px"; // Закрыть контент
        } else {
          content.style.maxHeight = `${content.scrollHeight}px`; // Открыть контент
        }
      });
    });
  }

  function setupImagePreview() {
    const images = document.querySelectorAll(".img-grid img");
    const modal = document.getElementById("imageModal");
    const modalImage = document.getElementById("modalImage");

    images.forEach((imgElement) => {
      imgElement.addEventListener("click", () => {
        const imgSrc = (imgElement as HTMLImageElement).src;
        (modalImage as HTMLImageElement).src = imgSrc;
        modal.classList.add("open");
        modal.classList.remove("hide");
        modal.style.display = "flex";
        setTimeout(() => {
          modal.style.opacity = "1";
        }, 10); // Немного задерживаем, чтобы применился переход
        document.body.style.overflow = "hidden"; // Блокировка прокрутки при открытии
      });
    });

    modal.addEventListener("click", (event) => {
      if (event.target === modal) {
        modal.style.opacity = "0";
        modal.classList.add("hide");
        modal.classList.remove("open");
        setTimeout(() => {
          modal.style.display = "none";
          document.body.style.overflow = "auto"; // Разблокировка прокрутки после закрытия
        }, 300); // Длительность анимации закрытия
      }
    });
  }

  document.addEventListener("astro:page-load", () => {
    setupToggle();
    setupImagePreview();
  });
</script>
